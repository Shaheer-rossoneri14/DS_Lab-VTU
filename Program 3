/*Design, Develop and Implement a menu driven Program in C for the
following operations on STACK of Integers (Array Implementation of Stack
with maximum size MAX)
a. Push an Element on the Stack
b. Pop an Element from the Stack
d. Demonstrate Overflow and Underflow situations on Stack
e. Display the status of Stack
f. Exit
Support the program with appropriate functions for each of the above
operations*/

#include<stdio.h>
#include<stdlib.h>
#define MAX 5

int s[MAX];
int top = -1;

void push(int item);
int pop();
void display();

void main()
{
  int choice, item;
  while(1)
    {
      printf("Menu : ");
      printf("\n=>1.Push an Element to Stack ");
      printf("\n=>2.Pop an Element from Stack ");
      printf("\n=>3.Display ");
      printf("\n=>4.Exit ");
      printf("\nEnter your choice: ");
      scanf("%d", &choice);
      switch(choice)
        {
          case 1: printf("\nEnter an element to be pushed: ");
                  scanf("%d", &item);
                  push(item);
                  break;
          case 2: item = pop();
            if(item != -1)
              printf("\nElement popped is: %d", item);
              break;
          case 3: display();
              break;
          case 4: exit(1);
          default: printf("\nPlease enter valid choice ") ;
              break;
        }
    }
}

void push(int item)
{
  if(top == MAX-1)
    {
      printf("\nStack overflow");
      return;
    }

  top = top + 1 ;
  s[top] = item;
}

int pop()
{ 
  int item;
    if(top == -1)
      {
        printf("\nStack underflow");
        return -1;
      }
    item = s[top];
    top = top - 1;
    return item;
}

void display()
{
  int i;
  if(top == -1)
    {
      printf("\nStack is empty");
      return;
    }
      printf("\nStack elements are:\n ");
      for(i=top; i>=0 ; i--)
        printf("| %d |\n", s[i]);
}
